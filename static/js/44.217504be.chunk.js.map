{"version":3,"sources":["../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useGlobalListener.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","../node_modules/react-table/index.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../../src/plugin-hooks/useGridLayout.js"],"names":["useCommittedRef","value","ref","useRef","useEffect","current","useEventCallback","fn","useCallback","apply","arguments","useEventListener","eventTarget","event","listener","capture","handler","target","addEventListener","removeEventListener","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","createWithBsPrefix","prefix","displayName","Component","defaultProps","BsComponent","React","className","bsPrefix","as","Tag","props","resolvedPrefix","useBootstrapPrefix","_jsx","classNames","usePrevious","useGlobalListener","documentTarget","document","useCallbackRef","useState","useMounted","mounted","isMounted","WeakMap","_excluded","Anchor","_ref","href","onKeyDown","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","useButtonProps","assign","tagName","buttonProps","handleKeyDown","e","trim","role","disabled","rel","onClick","tabIndex","type","meta","handleClick","isTrivialHref","preventDefault","stopPropagation","undefined","Button","asProp","p","isReactNative","global","navigator","product","isDOM","useLayoutEffect","context","DEVICE_SIZES","Col","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","useCol","colProps","CardImg","variant","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","Row","decoratedBsPrefix","sizePrefix","cols","BreadcrumbItem","active","linkAs","LinkComponent","linkProps","title","Breadcrumb","listProps","label","Item","module","exports","require","actions","init","defaultRenderer","emptyRenderer","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","next","style","makePropGetter","hooks","userProps","prev","handlePropGetter","prevProps","Array","isArray","reduceHooks","initial","allowUndefined","loopHooks","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","safeUseLayoutEffect","useMountedLayoutEffect","deps","mountedRef","makeRenderer","instance","column","Comp","console","info","Error","flexRender","component","proto","getPrototypeOf","prototype","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","String","d","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","row","error","decorateColumn","userDefaultColumn","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","a","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","checked","isVisible","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","isAllRowsExpanded","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","b","from","Set","size","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValuesByColumnID","row1","row2","toString","isNaN","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","alower","blower","replaceNonNumeric","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","touch","cancelable","events","passiveIfSupported","supported","options","window","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","w","columnIndex","elWidth","getElementById","offsetWidth","startingWidth","newWidth","columnWidthsCopy","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","userColumns","getStateReducer","s","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups"],"mappings":"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","file":"static/js/44.217504be.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import useEventListener from './useEventListener';\nimport { useCallback } from 'react';\n\n/**\n * Attaches an event handler outside directly to the `document`,\n * bypassing the react synthetic event system.\n *\n * ```ts\n * useGlobalListener('keydown', (event) => {\n *  console.log(event.key)\n * })\n * ```\n *\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useGlobalListener(event, handler, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var documentTarget = useCallback(function () {\n    return document;\n  }, []);\n  return useEventListener(documentTarget, event, handler, capture);\n}","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n\n  if (isTrivialHref(props.href) && !props.role || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href: tagName === 'a' && disabled ? undefined : href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","export function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: `grid`,\n      gridTemplateColumns: instance.state.gridLayout.columnWidths.map(w => w).join(` `),\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky` //enables a scroll wrapper to be placed around the table and have sticky headers\n    },\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === `init`) {\n    return {\n      gridLayout: {\n        columnWidths: instance.columns.map(() => `auto`),\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === `columnStartResizing`) {\n    const { columnId } = action\n    const columnIndex = instance.visibleColumns.findIndex(col => col.id === columnId)\n    const elWidth = getElementWidth(columnId)\n\n    if (elWidth !== undefined) {\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          columnId,\n          columnIndex,\n          startingWidth: elWidth\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === `columnResizing`) {\n    const {\n      columnIndex,\n      startingWidth,\n      columnWidths,\n    } = state.gridLayout\n\n    const change = state.columnResizing.startX - action.clientX\n    const newWidth = startingWidth - change\n    const columnWidthsCopy = [...columnWidths]\n    columnWidthsCopy[columnIndex] = `${newWidth}px`\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: columnWidthsCopy,\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}"],"sourceRoot":""}