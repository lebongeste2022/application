{"version":3,"sources":["../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/warning/warning.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/Form.js"],"names":["rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","createWithBsPrefix","prefix","displayName","Component","defaultProps","BsComponent","React","ref","className","bsPrefix","as","Tag","props","resolvedPrefix","useBootstrapPrefix","_jsx","classNames","warning","module","exports","FormContext","DEVICE_SIZES","Col","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","useCol","colProps","length","FormGroup","controlId","context","useMemo","Provider","value","children","propTypes","type","PropTypes","tooltip","bool","elementType","Feedback","FormCheckInput","id","isValid","isInvalid","useContext","FormControl","size","htmlSize","plaintext","readOnly","Object","assign","FloatingLabel","label","_jsxs","htmlFor","FormCheckLabel","FormCheck","bsSwitchPrefix","inline","disabled","feedbackTooltip","feedback","feedbackType","style","title","innerFormContext","hasLabel","input","_Fragment","Input","Label","FormLabel","column","visuallyHidden","columnClass","FormRange","FormSelect","FormText","muted","Switch","_ref","any","validated","Form","Group","Control","Floating","FormFloating","Check","Text","Range","Select"],"mappings":"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","file":"static/js/8.9f4fcbf2.chunk.js","sourcesContent":["var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = label != null && label !== false && !children;\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, label && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});"],"sourceRoot":""}